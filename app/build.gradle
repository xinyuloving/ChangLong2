apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.lkkdesign.changlong"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
//        ndk{abiFilters "armeabi","armeabi-v7a","x86"}
    }

    buildTypes {
        release {
            // true - 打开混淆
            //minifyEnabled true
            // true - 打开资源压缩
            //shrinkResources true
            // 用于设置Proguard的规划路径；
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
//            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
    }
    defaultConfig {
        multiDexEnabled true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:preference-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:support-vector-drawable:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'
    api files('libs/commons-lang3-3.1.jar')
    api files('libs/nineoldandroids-2.4.0.jar')
    api files('libs/okhttp-3.9.1.jar')
    api files('libs/okio-1.14.0.jar')
    api files('libs/universal-image-loader-1.9.5.jar')
    api files('libs/com.baidu.tts_2.3.2.20180713_6101c2a.jar')
    api files('libs/jxl.jar')
    //第三方Dialog
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'
    //权限申请
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.0.5'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.3@aar'
    //TextView
    implementation 'com.github.lygttpod:SuperTextView:2.1.8'
    //绘制曲线
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    //Gson
    implementation 'com.google.code.gson:gson:2.8.4'
    //butterknife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //下拉
    implementation 'com.github.arcadefire:nice-spinner:1.3.4'
    //RecyclerView侧滑菜单
    implementation 'com.yanzhenjie:recyclerview-swipe:1.2.0'
    //关于界面
    implementation 'com.github.medyo:android-about-page:1.2.4'
    def htextview_version = "0.1.6"
    // as 3.0 use implementation
    implementation "com.hanks:htextview-base:$htextview_version"
    implementation "com.hanks:htextview-rainbow:$htextview_version"
    implementation 'com.bigkoo:ConvenientBanner:2.1.4'
    //通用的广告栏控件
    implementation 'com.facebook.fresco:fresco:1.3.0'
    implementation 'me.relex:photodraweeview:1.1.3'
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
    implementation files('libs/printerlibs.jar')
//    implementation files('libs/classes.jar')
}

////硬件部分的配置
//preBuild {
//    doLast {
//        def imlFile = file(project.name + ".iml")
//        println 'Change ' + project.name + '.iml order'
//        try {
//            def parsedXml = (new XmlParser()).parse(imlFile)
//            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
//            parsedXml.component[1].remove(jdkNode)
//            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
//            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
//            groovy.xml.XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
//        } catch (FileNotFoundException e) {
//            // nop, iml not found
//        }
//    }
//}

